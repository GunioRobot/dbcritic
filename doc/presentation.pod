=head1 DBIx::Class::Schema::Critic

Mark Gardner <mjgardner@cpan.org>

G<The-Critic.jpg>

=head1 I love Perl::Critic

=over

=item *

makes sure I follow the same coding standards

=item *

catches potential maintenance problems and ambiguities

=item *

adjustable so I can bend the "rules" when I need to

=back


=head1 I hate databases

I<(specifically, relational database schemas)>

=over

=item *

a lot of details to get right when developing a schema

=item *

a lot of repetitive SQL to keep consistent

=item *

often thrown together by developers (like me) more focused on code

=back


=head1 Quick Demo

    $ dbic_critic --dsn dbi:SQLite:demo.db


=head1 Quick Demo Results

    $ dbic_critic --dsn dbi:SQLite:demo.db

G<Critic-Main-600x314.jpg>


=head1 What just happened?

=over

=item *

Connect to database

=item *

Turn database schema into Perl classes

=item *

Load plugins to process each type of class created

=item *

Loop over the classes, plugins report violations of a policy

=item *

(Perl::Critic works the same way, only with Perl documents)

=back


=head1 I Love CPAN

=over

=item DBIx::Class

=item DBIx::Class::Schema::Loader

=item Module::Pluggable

=item Moo

=back


=head1 Under the hood

=head2 Main classes

=over

=item Critic

=item Critic::Loader

=item Critic::Violation

=back

=head2 Roles

=over

=item Critic::Policy

=item Critic::PolicyType


=head1 What is a policy?

=over

=item in DBIx::Class::Schema::Critic::Policy:: namespace

=item has four methods

=over

=item description

=item explanation

=item applies_to

=item violates

=back

=item That's it.

=back


=head1 TODO

=over

=item *

Steal more ideas from Perl::Critic!

=over

=item Configure which policies run, severity levels, themes, etc.

=item Support configurable policies

=back

=item *

Make installable outside of CPAN toolchain for non-Perl programmers.

(I'm sure Ruby and PHP people have crappy databases too.)

=item *

MOAR POLICIES

(Pls send as L<issues on Github|http://github.com/mjgardner/DBIx-Class-Schema-Critic/issues> KTHX)

=back


=head1 Where To Get it

=over

=item Download

=over

=item CPAN: L<http://search.cpan.org/dist/DBIx-Class-Schema-Critic/>

=item MetaCPAN: L<http://metacpan.org/release/DBIx-Class-Schema-Critic/>

=back

=item Contribute ideas, policies and code

=over

=item GitHub: L<http://github.com/mjgardner/DBIx-Class-Schema-Critic>

=item I use Dist::Zilla, but the default branch doesn't need it.

=back

=back

=over

=item *

Questions?

=back
